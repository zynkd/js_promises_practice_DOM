{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","getMessage","message","typeOfMessage","insertClass","insertAdjacentHTML","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","secondPromise","thirdPromise","leftClick","rightClick","e","preventDefault","then","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAWC,EAASC,GACrBC,IAAAA,EAAgC,YAAlBD,EAA8B,oBAAsB,GAEjEL,OAAAA,EAAKO,mBACV,YAC4CD,4CAAAA,OAAAA,EAAgBF,MAAAA,OAAAA,EAF9D,WAMF,IAAMI,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCX,EAAKY,iBAAiB,QAAS,WAAMF,OAAAA,EAAQ,gCAE7CG,WAAW,WAAMF,OAAAA,EAAO,IAAIG,MAAM,gCAAgC,OAG9DC,EAAgB,IAAIN,QAAQ,SAACC,GACjCV,EAAKY,iBAAiB,cAAe,WACnCF,OAAAA,EAAQ,iCAGVV,EAAKY,iBAAiB,QAAS,WAAMF,OAAAA,EAAQ,mCAGzCM,EAAe,IAAIP,QAAQ,SAACC,GAC5BO,IAAAA,GAAY,EACZC,GAAa,EAEjBjB,SAASW,iBAAiB,QAAS,YACjCK,GAAY,IAEKC,GACfR,EAAQ,gCAIZT,SAASW,iBAAiB,cAAe,SAACO,GACxCA,EAAEC,iBACFF,GAAa,EAETD,GAAaC,GACfR,EAAQ,kCAKdF,EACGa,KAAK,SAACjB,GAAYD,OAAAA,EAAWC,KAC7BkB,MAAM,SAACC,GAAUpB,OAAAA,EAAWoB,EAAO,aAEtCR,EACGM,KAAK,SAACjB,GAAYD,OAAAA,EAAWC,KAC7BkB,MAAM,SAACC,GAAUpB,OAAAA,EAAWoB,EAAO,aAEtCP,EACGK,KAAK,SAACjB,GAAYD,OAAAA,EAAWC,KAC7BkB,MAAM,SAACC,GAAUpB,OAAAA,EAAWoB,EAAO","file":"main.9a67e455.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nfunction getMessage(message, typeOfMessage) {\n  const insertClass = typeOfMessage === 'warning' ? ' message--warning' : '';\n\n  return body.insertAdjacentHTML(\n    'beforeend',\n    `<div data-q=\"notification\" class=\"message${insertClass}\">${message}</div>`\n  );\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => resolve('First promise was resolved'));\n\n  setTimeout(() => reject(new Error('First promise was rejected')), 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  body.addEventListener('contextmenu', () =>\n    resolve('Second promise was resolved')\n  );\n\n  body.addEventListener('click', () => resolve('Second promise was resolved'));\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClick = false;\n  let rightClick = false;\n\n  document.addEventListener('click', () => {\n    leftClick = true;\n\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    rightClick = true;\n\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfirstPromise\n  .then((message) => getMessage(message))\n  .catch((error) => getMessage(error, 'warning'));\n\nsecondPromise\n  .then((message) => getMessage(message))\n  .catch((error) => getMessage(error, 'warning'));\n\nthirdPromise\n  .then((message) => getMessage(message))\n  .catch((error) => getMessage(error, 'warning'));\n"]}